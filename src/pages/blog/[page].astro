---
import PostEmbed from "@components/PostEmbed.astro";
import Default from "@layouts/Default.astro";
//@ts-ignore
import { sortByDescending } from "@util/Util";

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob("./*.md");
  sortByDescending(allPosts, (post) => new Date(post.frontmatter.date));

  return paginate(allPosts, { pageSize: 2 });
}

const { page } = Astro.props;

const current = page.currentPage;
const last = page.lastPage;

const indices = [];
const RANGE = 2;

if (current - 1 > RANGE) {
  indices.push(1, -1);
}
for (let i = current - RANGE; i < current + RANGE + 1; i++) {
  if (i > 0 && i <= last) {
    indices.push(i);
  }
}
if (last - current > RANGE) {
  indices.push(-1, last);
}
---

<Default title={`Blog (${current}/${last})`}>
  <h1>Blog</h1>

  <div id="posts" class="content container my-5">
    {page.data.map((post) => <PostEmbed {post} />)}
  </div>

  <nav class="pagination is-centered" role="navigation" aria-label="pagination">
    <a
      class="nohl pagination-previous"
      {/*@ts-ignore*/}
      disabled={!page.url.prev}
      href={page.url.prev}
    >
      <span class="icon"><i class={`fas fa-angle-left`}></i></span>
      <span class="is-hidden-mobile">Prev</span>
    </a>

    <a
      class="nohl pagination-next"
      {/*@ts-ignore*/}
      disabled={!page.url.next}
      href={page.url.next}
    >
      <span class="icon"><i class={`fas fa-angle-right`}></i></span>
      <span class="is-hidden-mobile">Next</span>
    </a>

    <ul class="pagination-list">
      {
        indices.map((num) => (
          <li>
            {num > 0 ? (
              <a
                class:list={["nohl", "pagination-link", num == current && "is-current"]}
                aria-label={`Goto page ${num}`}
                href={`/blog/${num}`}
              >
                {num}
              </a>
            ) : (
              <span class="pagination-ellipsis">&hellip;</span>
            )}
          </li>
        ))
      }
    </ul>
  </nav>
</Default>
