---
layout: layouts/base.vto
title: Heya~
description: I'm Leah, also known as pluie or pluiedev!

opengraph:
  og:type: profile
  profile:first_name: Leah
  profile:last_name: Chen
  profile:username: pluie
  profile:gender: female
---
<link rel="stylesheet" href="main.css" />

<div class="top-detector"></div>
<main class="main-grid splash">
	<figure class="intro place-self-center">
		<img class="rounded-full border-2 border-brand" src="/img/avatar.png" alt="Avatar" width="320" height="320" />
	</figure>

	<div class="intro col-span-2 place-self-center flex flex-col">
		<h1 class="text-4xl lg:text-5xl font-bold font-sans">
			Heya~ I’m <span class="text-brand">Leah</span>!
			<a href="https://pronouns.cc/@pluieuwu" class="text-lg lg:text-xl text-brand">
			  · she/her <span class="i-twemoji:transgender-flag inline-block vertical-sub"></span>
			</a>
		</h1>

		<p class="text-2xl mt-2">
			You may know me better by my online alias,
			<span class="text-brand">pluie</span>.
		</p>
		<p class="text-xl mt-8">
      I'm a Chinese open-source <span class="inline-flex gap-1 items-center text-brand">developer
        <span class="i-twemoji:woman-technologist-light-skin-tone inline-block"></span></span>,
			graphics designer and <span class="inline-flex gap-1 items-center text-brand">artist
        <span class="i-twemoji:woman-artist-light-skin-tone inline-block"></span></span>,
      currently based in <span class="text-brand">Berlin, Germany</span>,
			aspiring to make the world of technology and design more accessible and
			inclusive for <span class="text-brand">everyone</span>.
		</p>
	</div>

	<div class="scroll-down hidden lg:block">
		Scroll down
		<div class="bottom-detector"></div>
	</div>

	<div id="scroll-indicator-vanish-point" class="prose text-justify col-span-2 dark:prose-invert">
		{{ echo |> strip_indent |> md }}
			I love coding, drawing, painting, indulging in my nerdy hobbies,
      discovering more about myself, and helping others discover and express themselves.
			Funnily enough, I do most of my productive work in my spare time when I'm supposed to relax—apparently,
			once I get fixated on something, I can't stop. Not sure if that's a good quality or not! ;)

			More things I like include dogs, cats, foxes, traffic cones, history, politics and linguistics.
			Especially <abbr title="constructed languages, or languages intentionally created by people">conlangs</abbr>.
			They're _very_ cool.

			I also often think way too hard about narrative video games, to the point
			I write full articles and reviews about them. I'm not exactly professional,
			but I still try my best to figure out what does and doesn't tick!
		{{ /echo }}
	</div>

	<div class="w-full">
    <h2 class="text-xl mb-2">Links <span class="inline-block vertical-sub i-mdi:arrow-bottom-right"></span></h2>
	  <div class="grid grid-cols-2 lg:grid-cols-1 w-full gap-2">
		{{ for link of links }}
			{{ set fg = link.fg ?? "white" }}
			<a
				href="{{ link.link }}"
        target="_blank"
				class="arrow-button bg-{{ link.color }} text-{{ fg }} flex items-center gap-1"
			>
        <div class="inline-block {{ link.icon }}"></div>
				{{ link.text }}
			</a>
		{{ /for }}
    </div>
	</div>

	<div class="text-centered w-full sm:text-left col-span-3">
    <h2 class="text-2xl font-bold">Technologies that...</h2>
    <div class="grid gap-y-8 sm:grid-cols-2 lg:grid-cols-3 lg:gap-16">
		  {{ for techs of technologies }}
		  	<div>
		  		<h3 class="text-xl my-3">{{ techs.title }}</h3>

	        <div class="icon-grid w-3/4 lg:w-auto mx-auto">
	        	{{ for id, icon of techs.icons }}
              <label for="lang-{{ id }}" class="icon">
                <input id="lang-{{ id }}" name="icon-select" type="radio" class="hidden icon-selector">
                <div class="{{ icon.icon }}" data-name="{{ icon.name }}"></div>
              </label>
	        	{{ /for }}
	        </div>
		  	</div>
		  {{ /for }}
    </div>
	</div>
</main>

<script>
	const scroll = document.querySelector('.scroll-down');
  const intro = document.querySelector('main');

	const t = new IntersectionObserver(entries => {
  	entries.forEach(entry => {
    	if (entry.isIntersecting) {
	    	scroll.classList.remove('opacity-0');
      	intro.classList.remove('compact');
	    }
	  });
	});
	const b = new IntersectionObserver(entries => {
  	entries.forEach(entry => {
    	if (entry.isIntersecting) {
      	scroll.classList.add('opacity-0');
      	intro.classList.add('compact');
	    }
	  });
	});

	function init(ev) {
		if (window.innerHeight < 600 || window.innerWidth < 1024) {
      scroll.classList.add('opacity-0');
			t.disconnect();
			b.disconnect();
		} else {
			t.observe(document.querySelector('.top-detector'));
			b.observe(document.querySelector('.bottom-detector'));
		}
	}

	window.addEventListener('resize', init)
	window.addEventListener('load', init)
</script>
